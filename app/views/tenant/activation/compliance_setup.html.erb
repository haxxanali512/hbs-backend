<div class="min-h-screen bg-gray-50">
  <!-- Header -->
  <div class="bg-white border-b border-gray-200">
    <div class="px-6 py-4">
      <div class="flex items-center justify-between">
        <div class="flex items-center space-x-3">
          <div class="w-10 h-10 bg-blue-600 rounded-lg flex items-center justify-center">
            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
          </div>
          <div>
            <h1 class="text-xl font-semibold text-gray-900">Compliance Center</h1>
            <p class="text-sm text-gray-500">Secure your business with proper documentation</p>
          </div>
        </div>
        <div class="flex items-center space-x-3">
          <div class="text-right">
            <p class="text-sm font-medium text-gray-900"><%= current_user.email %></p>
            <p class="text-xs text-gray-500">Account Manager</p>
          </div>
          <div class="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center">
            <span class="text-white font-medium text-sm"><%= current_user.email.first.upcase %></span>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Main content -->
  <div class="w-full mx-auto py-8 px-4 sm:px-6 lg:px-8">
    <!-- Progress indicator -->
    <div class="mb-8">
      <div class="flex items-center justify-between mb-4">
        <h2 class="text-2xl font-bold text-gray-900">Document Verification</h2>
        <div class="flex items-center space-x-2 text-sm text-gray-500">
          <span>Step 2 of 4</span>
          <div class="w-16 h-1 bg-gray-200 rounded-full">
            <div class="w-4 h-1 bg-blue-600 rounded-full"></div>
          </div>
        </div>
      </div>
      <p class="text-gray-600">Complete your compliance requirements to activate your account</p>
    </div>

    <!-- Card Layout -->
    <div class="space-y-6">
      <!-- Error Alert -->
      <% if @compliance.errors.any? %>
        <div class="bg-red-50 border border-red-200 rounded-lg p-4">
          <div class="flex items-start">
            <div class="flex-shrink-0">
              <svg class="h-5 w-5 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
            <div class="ml-3">
              <h3 class="text-sm font-medium text-red-800">Please fix the following errors:</h3>
              <div class="mt-2 text-sm text-red-700">
                <ul class="list-disc pl-5 space-y-1">
                  <% @compliance.errors.full_messages.each do |message| %>
                    <li><%= message %></li>
                  <% end %>
                </ul>
              </div>
            </div>
          </div>
        </div>
      <% end %>

      <%= form_with model: [@organization, @compliance], url: tenant_activation_compliance_path, method: :patch, local: true, class: "space-y-6" do |form| %>
        <!-- Hidden fields for compliance parameters -->
        <%= form.hidden_field :gsa_envelope_id %>
        <%= form.hidden_field :baa_envelope_id %>
        <%= form.hidden_field :gsa_signed_at %>
        <%= form.hidden_field :baa_signed_at %>
        <%= form.hidden_field :phi_access_locked_at %>
        <%= form.hidden_field :data_retention_expires_at %>
        
        <!-- Main Agreement Card -->
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
          <div class="p-6">
            <div class="flex items-start space-x-4">
              <div class="flex-shrink-0">
                <div class="w-12 h-12 bg-blue-600 rounded-lg flex items-center justify-center">
                  <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                  </svg>
                </div>
              </div>
              <div class="flex-1">
                <h3 class="text-lg font-semibold text-gray-900 mb-2">GSA & BAA</h3>
                <p class="text-gray-600 mb-4">General Service Agreement (GSA) & Business Associate Agreement (BAA)</p>
                
                <!-- Status Badge -->
                <div class="flex items-center space-x-4 mb-6">
                  <div id="agreement-status" class="flex items-center space-x-3">
                    <div class="w-3 h-3 bg-gray-300 rounded-full animate-pulse" id="status-indicator"></div>
                    <span id="agreement-status-text" class="text-sm font-medium text-gray-700">Ready to sign</span>
                  </div>
                  <div class="text-sm text-gray-600">
                    <span id="status-description">Click the button below to send for signature</span>
                  </div>
                </div>

                <!-- Action Button -->
                <button type="button" id="send-agreement-btn" class="inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed">
                  <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
                  </svg>
                  <span id="agreement-button-text">Send for Signature</span>
                  <span id="agreement-button-spinner" class="hidden">
                    <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                      <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                      <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                    Sending...
                  </span>
                </button>
              </div>
            </div>
          </div>
        </div>

        <!-- Action Buttons -->
        <div class="flex items-center justify-between pt-6 border-t border-gray-200">
          <%= link_to tenant_dashboard_path, class: "inline-flex items-center px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" do %>
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
            </svg>
            Back to Previous Step
          <% end %>
          
          <div class="flex space-x-3">
            <%= form.submit "Continue to Billing Setup", id: "continue-billing-btn", disabled: true, class: "inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-gray-400 border border-transparent rounded-md shadow-sm cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 disabled:opacity-50 disabled:cursor-not-allowed" do %>
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
              </svg>
              Continue to Billing Setup
            <% end %>
          </div>
        </div>
        <% end %>
      </div>
    </div>

    <!-- Help Section -->
    <div class="mt-8 bg-blue-50 rounded-lg p-6 border border-blue-200">
      <div class="flex items-start space-x-4">
        <div class="flex-shrink-0">
          <div class="w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center">
            <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
          </div>
        </div>
        <div class="flex-1">
          <h3 class="text-lg font-semibold text-gray-900 mb-2">Need Help?</h3>
          <p class="text-gray-600 mb-4">Our compliance team is here to assist you with any questions about the required documentation.</p>
          <div class="flex flex-wrap gap-3">
            <a href="mailto:compliance@holisticbusinesssolutions.com" class="inline-flex items-center px-3 py-2 text-sm font-medium text-blue-600 bg-white rounded-md border border-blue-200 hover:bg-blue-50 transition-colors duration-200">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
              </svg>
              Email Support
            </a>
            <a href="tel:+1-555-0123" class="inline-flex items-center px-3 py-2 text-sm font-medium text-blue-600 bg-white rounded-md border border-blue-200 hover:bg-blue-50 transition-colors duration-200">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
              </svg>
              Call Us
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // DocuSign integration
  const sendAgreementBtn = document.getElementById('send-agreement-btn');
  
  // Load existing status on page load
  loadDocuSignStatus();
  
  // Set up Agreement button
  if (sendAgreementBtn) {
    sendAgreementBtn.addEventListener('click', function() {
      sendAgreement(this);
    });
  }
  
  function sendAgreement(button) {
    const buttonText = button.querySelector('#agreement-button-text');
    const buttonSpinner = button.querySelector('#agreement-button-spinner');
    const statusText = document.getElementById('agreement-status-text');
    const continueButton = document.getElementById('continue-billing-btn');
    
    // Set loading state
    button.disabled = true;
    buttonText.classList.add('hidden');
    buttonSpinner.classList.remove('hidden');
    statusText.textContent = 'Sending...';
    statusText.className = 'text-base font-semibold text-yellow-600';
    
    // Ensure Continue button remains disabled
    if (continueButton) {
      continueButton.disabled = true;
      continueButton.className = 'inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-gray-400 border border-transparent rounded-md shadow-sm cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 disabled:opacity-50 disabled:cursor-not-allowed';
    }
    
    const endpoint = '/tenant/activation/send_agreement';
    
    fetch(endpoint, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        statusText.textContent = 'Sent for Signature';
        statusText.className = 'text-base font-semibold text-blue-600';
        
        // Update the envelope ID fields
        const gsaEnvelopeField = document.querySelector('input[name*="gsa_envelope_id"]');
        const baaEnvelopeField = document.querySelector('input[name*="baa_envelope_id"]');
        if (gsaEnvelopeField) gsaEnvelopeField.value = data.envelope_id;
        if (baaEnvelopeField) baaEnvelopeField.value = data.envelope_id;
        
        // Update button
        buttonText.textContent = 'Resend';
        button.classList.remove('bg-blue-600', 'hover:bg-blue-700');
        button.classList.add('bg-gray-600', 'hover:bg-gray-700');
        
        alert(data.message);
      } else {
        statusText.textContent = 'Error';
        statusText.className = 'text-base font-semibold text-red-600';
        alert('Error: ' + data.error);
      }
    })
    .catch(error => {
      console.error('Error:', error);
      statusText.textContent = 'Error';
      statusText.className = 'text-base font-semibold text-red-600';
      alert('An error occurred. Please try again.');
    })
    .finally(() => {
      button.disabled = false;
      buttonText.classList.remove('hidden');
      buttonSpinner.classList.add('hidden');
    });
  }
  
  function loadDocuSignStatus() {
    fetch('/tenant/activation/docusign_status', {
      method: 'GET',
      headers: {
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
      }
    })
    .then(response => response.json())
    .then(data => {
      console.log('DocuSign status response:', data);
      if (data.success && data.results) {
        // Update agreement status (both GSA and BAA use same envelope)
        if (data.results.gsa) {
          console.log('Using GSA result:', data.results.gsa);
          updateAgreementStatus(data.results.gsa);
        } else if (data.results.baa) {
          console.log('Using BAA result:', data.results.baa);
          updateAgreementStatus(data.results.baa);
        }
      }
    })
    .catch(error => {
      console.error('Error loading DocuSign status:', error);
    });
  }
  
  function updateAgreementStatus(result) {
    console.log('Updating agreement status with result:', result);
    const statusText = document.getElementById('agreement-status-text');
    const statusIndicator = document.getElementById('status-indicator');
    const statusDescription = document.getElementById('status-description');
    const button = document.getElementById('send-agreement-btn');
    const buttonText = button.querySelector('#agreement-button-text');
    const continueButton = document.getElementById('continue-billing-btn');
    
    if (result.success) {
      const status = result.status;
      const envelopeId = result.envelope_id;
      console.log('Status:', status, 'Envelope ID:', envelopeId);
      
      // Update status display
      if (status === 'completed' || status === 'autoresponded') {
        statusText.textContent = 'Completed';
        statusText.className = 'text-base font-semibold text-green-600';
        statusIndicator.className = 'w-4 h-4 bg-green-500 rounded-full animate-pulse';
        statusDescription.textContent = 'All parties have signed the agreement';
        buttonText.textContent = '✓ Completed';
        button.disabled = true;
        button.className = 'group relative inline-flex items-center px-8 py-4 text-lg font-semibold text-white bg-gradient-to-r from-green-600 to-emerald-600 rounded-xl shadow-lg cursor-not-allowed opacity-75';
        
        // Enable the Continue to Billing Setup button
        if (continueButton) {
          continueButton.disabled = false;
          continueButton.className = 'inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-green-600 border border-transparent rounded-md shadow-sm hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed';
        }
      } else if (status === 'sent') {
        statusText.textContent = 'Sent for Signature';
        statusText.className = 'text-base font-semibold text-blue-600';
        statusIndicator.className = 'w-4 h-4 bg-blue-500 rounded-full animate-pulse';
        statusDescription.textContent = 'Waiting for signatures from all parties';
        buttonText.textContent = 'Resend';
        button.className = 'group relative inline-flex items-center px-8 py-4 text-lg font-semibold text-white bg-gradient-to-r from-gray-600 to-gray-700 rounded-xl shadow-lg hover:shadow-xl hover:from-gray-700 hover:to-gray-800 focus:outline-none focus:ring-4 focus:ring-gray-500/50 transition-all duration-300 transform hover:scale-105';
        
        // Keep Continue button disabled
        if (continueButton) {
          continueButton.disabled = true;
          continueButton.className = 'inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-gray-400 border border-transparent rounded-md shadow-sm cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 disabled:opacity-50 disabled:cursor-not-allowed';
        }
      } else if (status === 'delivered') {
        statusText.textContent = 'Delivered';
        statusText.className = 'text-base font-semibold text-yellow-600';
        statusIndicator.className = 'w-4 h-4 bg-yellow-500 rounded-full animate-pulse';
        statusDescription.textContent = 'Document delivered, awaiting signatures';
        buttonText.textContent = 'Resend';
        button.className = 'group relative inline-flex items-center px-8 py-4 text-lg font-semibold text-white bg-gradient-to-r from-gray-600 to-gray-700 rounded-xl shadow-lg hover:shadow-xl hover:from-gray-700 hover:to-gray-800 focus:outline-none focus:ring-4 focus:ring-gray-500/50 transition-all duration-300 transform hover:scale-105';
        
        // Keep Continue button disabled
        if (continueButton) {
          continueButton.disabled = true;
          continueButton.className = 'inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-gray-400 border border-transparent rounded-md shadow-sm cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 disabled:opacity-50 disabled:cursor-not-allowed';
        }
      }
      
      // Update envelope ID fields
      const gsaEnvelopeField = document.querySelector('input[name*="gsa_envelope_id"]');
      const baaEnvelopeField = document.querySelector('input[name*="baa_envelope_id"]');
      if (gsaEnvelopeField) gsaEnvelopeField.value = envelopeId;
      if (baaEnvelopeField) baaEnvelopeField.value = envelopeId;
      
      // Update signed_at fields if completed
      if (status === 'completed' || status === 'autoresponded') {
        const gsaSignedField = document.querySelector('input[name*="gsa_signed_at"]');
        const baaSignedField = document.querySelector('input[name*="baa_signed_at"]');
        const currentTime = new Date().toISOString();
        if (gsaSignedField) gsaSignedField.value = currentTime;
        if (baaSignedField) baaSignedField.value = currentTime;
      }
    }
  }
  
  // Poll for status updates every 30 seconds
  setInterval(loadDocuSignStatus, 30000);
});
</script>
