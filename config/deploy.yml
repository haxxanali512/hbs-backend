# Name of your application. Used to uniquely configure containers.
service: hbs_data_processing

# Name of the container image.
image: haxxanali512/hbs-backend

# Deploy to these servers.
servers:
  web:
    hosts:
      - 3.148.151.165
    env:
      secret:
        - RAILS_MASTER_KEY
      clear:
        # Set number of cores available to the application on each server (default: 1).
        WEB_CONCURRENCY: 2

        # Log everything from Rails
        RAILS_LOG_LEVEL: info

        # API format configuration (json or csv)
        API_FORMAT: json

        # Rails environment
        RAILS_ENV: production
  job:
    hosts:
      - 3.148.151.165
    cmd: bundle exec sidekiq
    env:
      secret:
        - RAILS_MASTER_KEY
      clear:
        # Set number of cores available to the application on each server (default: 1).
        WEB_CONCURRENCY: 2

        # Log everything from Rails
        RAILS_LOG_LEVEL: info

        # API format configuration (json or csv)
        API_FORMAT: json

        # Rails environment
        RAILS_ENV: production

# Enable SSL auto certification via Let's Encrypt and allow for multiple apps on a single web server.
# Remove this section when using multiple web servers and ensure you terminate SSL at your load balancer.
#
# Note: If using Cloudflare, set encryption mode in SSL/TLS setting to "Full" to enable CF-to-app encryption.
proxy:
  ssl: false
  host: 3.148.151.165

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: haxxanali512

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .kamal/secrets).
env:
  secret:
    - RAILS_MASTER_KEY
    - DATABASE_PASSWORD
    - REDIS_PASSWORD
  clear:
    # Database configuration
    DATABASE_HOST: hbs_data_processing-db
    DATABASE_USERNAME: postgres
    DATABASE_PORT: 5432

    # Redis configuration
    REDIS_URL: redis://hbs_data_processing-redis:6379/0

    # Set number of cores available to the application on each server (default: 1).
    WEB_CONCURRENCY: 2

    # Log everything from Rails
    RAILS_LOG_LEVEL: info

    # API format configuration (json or csv)
    API_FORMAT: json

    # Rails environment
    RAILS_ENV: production

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
aliases:
  console: app exec --interactive --reuse "bin/rails console"
  shell: app exec --interactive --reuse "bash"
  logs: app logs -f
  dbc: app exec --interactive --reuse "bin/rails dbconsole"


# Use a persistent storage volume for sqlite database files and local Active Storage files.
# Recommended to change this to a mounted volume path that is backed up off server.
volumes:
  - "hbs_data_processing_storage:/rails/storage"


# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
# asset_path: /rails/public/assets

# Configure the image builder.
builder:
  arch: amd64

  # # Build image via remote server (useful for faster amd64 builds on arm64 computers)
  # remote: ssh://docker@docker-builder-server
  #
  # # Pass arguments and secrets to the Docker build process
  # args:
  #   RUBY_VERSION: ruby-3.2.0
  # secrets:
  #   - GITHUB_TOKEN
  #   - RAILS_MASTER_KEY

# Use a different ssh user than root
ssh:
  user: deployer

# Use accessory services (secrets come from .kamal/secrets).
accessories:
  db:
    image: postgres:15
    host: 3.148.151.165
    port: "127.0.0.1:5432:5432"
    env:
      clear:
        POSTGRES_DB: hbs_data_processing_production
      secret:
        - POSTGRES_PASSWORD
    directories:
      - data:/var/lib/postgresql/data
  redis:
    image: redis:7.0
    host: 3.148.151.165
    port: "127.0.0.1:6379:6379"
    env:
      secret:
        - REDIS_PASSWORD
    directories:
      - data:/data
